{"name":"tenyr","body":"### Usage\r\n```\r\n$ tas -ohello.to hello.tas\r\n$ tld -ohello.texe hello.to puts.to\r\n$ tsim hello.texe\r\nhello, world !\r\n```\r\n\r\n### Overview\r\n**tenyr** is a 32-bit computing environment with focus on simplicity of design and implementation.\r\n\r\n**tenyr** currently provides\r\n\r\n* an [instruction set architecture](https://github.com/kulp/tenyr/wiki/Assembly-language)\r\n* an [assembler / disassembler (tas)](https://github.com/kulp/tenyr/wiki/Assembler)\r\n* a linker (tld)\r\n* an [architectural simulator (tsim)](https://github.com/kulp/tenyr/wiki/Simulator)\r\n\r\nshows progress on\r\n\r\n* a [standard library](https://github.com/kulp/tenyr/tree/master/lib)\r\n* a [Forth environment](https://github.com/kulp/tenyr/tree/master/forth)\r\n* a [synthesisable HDL implementation](https://github.com/kulp/tenyr/tree/master/hw/verilog)\r\n\r\nand aspires to achieve\r\n\r\n* a [C compiler](https://github.com/kulp/toycen)\r\n* a novel operating system\r\n\r\nThe novel **tenyr** architecture is a two's complement, 32-bit, modified Harvard architecture. Everything possible is one word of 32 bits wide. The architecture design focuses on simplicity of design and implementation, with as many features as possible implemented in terms of simpler features. For example, there is no hardware stack support, although a set of assembly macros are provided for stack manipulation. For simplicity, **tenyr** is designed as a non-concurrent single-core architecture. It is intended that **tenyr** be useful as a didactic tool, though documentation may lag behind implementation.\r\n\r\n**tenyr** is made available under the [MIT license](https://github.com/kulp/tenyr/blob/master/COPYING), and is Copyright 2011-2012 [Darren Kulp](mailto:darren@kulp.ch) and [contributors](https://github.com/kulp/tenyr/blob/master/CREDITS).\r\n","tagline":"A simple 32-bit computing environment","google":"UA-25274107-1","note":"Don't delete this file! It's used internally to help with page regeneration."}
